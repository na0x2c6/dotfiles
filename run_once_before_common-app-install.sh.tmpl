#!/bin/bash

set -Eeuv


if [[ $(uname -s) != "Linux" ]] ; then
    exit 0
fi

source "{{ .chezmoi.config.sourceDir }}/_utils.sh"

sudo dnf install -y vim-enhanced emacs tmux zsh \
    ripgrep global cmigemo golang rust cargo clang podman-docker
sudo dnf group install -y c-development development-tools

cargo install emacs-lsp-booster

systemctl --user enable --now podman.socket
sudo loginctl enable-linger $USER

COMPOSE_PATH=/usr/local/bin/docker-compose
if [[ ! -x "$COMPOSE_PATH" ]] ; then
    TAG=$(curl -sD - https://github.com/docker/compose/releases/latest | tr -d '\r' | grep '^location' | grep -oE '[^/]+$')

    [[ -n "$TAG" ]] || { echo "Failed to download docker-compose." ; exit 1; }

    sudo curl -SL "https://github.com/docker/compose/releases/download/${TAG}/docker-compose-linux-$(uname -m)" -o $COMPOSE_PATH

    sudo chmod +x $COMPOSE_PATH
fi

if [[ ! -x ~/go/bin/migemogrep ]] ; then
    go install github.com/peco/migemogrep@master
fi

if [[ ! -x ~/go/bin/peco ]] ; then
    [[ -e https://github.com/peco/peco.git ]] || git clone https://github.com/peco/peco.git \
        ~/go/src/github.com/peco/peco

    cd ~/go/src/github.com/peco/peco
    make build
    cp $(find ./releases -type f -perm /u+x | sort -r --version-sort) ~/go/bin/peco
fi

if [[ ! -x ~/go/bin/memo ]] ; then
    go install github.com/mattn/memo@latest
fi

if [[ ! -e ~/.powerlevel10k ]] ; then
    git clone --filter=blob:none https://github.com/romkatv/powerlevel10k.git ~/.powerlevel10k
fi

if [[ -n "{{ .vimrepo }}" ]] && [[ ! -e ~/.vim ]] ; then
    git clone {{ .vimrepo }} ~/.vim
fi

if [[ -n "{{ .emacsrepo }}" ]] && [[ ! -e ~/.emacs.d ]] ; then
    git clone {{ .emacsrepo }} ~/.emacs.d
fi

if [[ -n "{{ .memorepo }}" ]] && [[ ! -e ~/.config/memo/_memo ]] ; then
    git clone {{ .memorepo }} ~/.config/memo/_memo
fi

if ! which diff-highlight > /dev/null ; then
    sudo ln -s /usr/share/git-core/contrib/diff-highlight /usr/local/bin/
fi

if [[ ! -e ~/.fzf ]] ; then
    git clone --filter=blob:none https://github.com/junegunn/fzf.git ~/.fzf
    cd $_
    ./install --key-bindings --completion --no-update-rc
fi

sudo chsh $USER --shell /usr/bin/zsh
